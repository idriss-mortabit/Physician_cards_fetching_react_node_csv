{"ast":null,"code":"import _classCallCheck from \"/home/idriss/Desktop/imhungry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/idriss/Desktop/imhungry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/idriss/Desktop/imhungry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/idriss/Desktop/imhungry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/idriss/Desktop/imhungry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/idriss/Desktop/imhungry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/idriss/Desktop/imhungry/client/src/components/MapModal.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\nimport Geocode from \"react-geocode\";\nimport Map from './Map';\n\nvar MapModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapModal, _React$Component);\n\n  function MapModal(props) {\n    var _this;\n\n    _classCallCheck(this, MapModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapModal).call(this, props));\n    console.log(\"Hello from Map Modal\");\n    _this.state = {\n      modal: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MapModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// Geocode.setApiKey(\"2230344e87193a\");\n      // Geocode.enableDebug();\n      // Geocode.fromAddress(\"300 PASTEUR DR H3680A\").then(\n      // \tresponse => {\n      // \t\tconsole.log(\"ha lat w lng\")\n      // \t\tthis.setState({\n      // \t\t\tlat: response.results[0].geometry.location.latitude,\n      // \t\t\tlng: response.results[0].geometry.location.longitude\n      // \t})\n      // },\n      // \terror => {\n      // \t\tconsole.error(error);\n      // }\n      // );\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"info\",\n        className: \"font-weight-bold btn float-right\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-location-arrow\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), \" Address \"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.physician[\"Physician_Profile_ID\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Location \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"clearfix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Address:\", React.createElement(\"address\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \" \", this.props.physician.Recipient_Primary_Business_Street_Address_Line1))), React.createElement(Map, {\n        app_id: \"0etNHVQpVlYq19ZIMA8r\",\n        app_code: \"GnTQW_LcBFER-c7EX-0b3g\" // lat={this.state.lat}\n        // lng={this.state.lng}\n        ,\n        street: this.props.physician[\"Recipient_Primary_Business_Street_Address_Line1\"],\n        city: this.props.physician[\"Recipient_City\"],\n        state: this.props.physician[\"Recipient_State\"],\n        postalCode: this.props.physician[\"Recipient_Zip_Code\"],\n        country: this.props.physician[\"Recipient_Country\"] //address={this.props.physician[\"Recipient_Primary_Business_Street_Address_Line1\"]}\n        ,\n        zoom: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MapModal;\n}(React.Component);\n\nexport default MapModal;","map":{"version":3,"sources":["/home/idriss/Desktop/imhungry/client/src/components/MapModal.js"],"names":["React","axios","Button","Modal","ModalHeader","ModalBody","ModalFooter","Row","Col","Geocode","Map","MapModal","props","console","log","state","modal","toggle","bind","setState","physician","Recipient_Primary_Business_Street_Address_Line1","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,EAA6DC,GAA7D,EAAkEC,GAAlE,QAA6E,YAA7E;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;IAGMC,Q;;;;;AACL,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,kFAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE;AADK,KAAb;AAIA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,uDAAd;AAPkB;AAUlB;;;;wCACmB,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;6BACQ;AACP,WAAKC,QAAL,CAAc;AACbH,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADN,OAAd;AAGE;;;6BAEM;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,SAAS,EAAC,kCAA/B;AAAkE,QAAA,OAAO,EAAE,KAAKC,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwF;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAoC,uBAAY,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxF,cADF,EAEE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,KAA1B;AAAiC,QAAA,MAAM,EAAE,KAAKC,MAA9C;AAAsD,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWQ,SAAX,CAAqB,sBAArB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKH,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAW,KAAKL,KAAL,CAAWQ,SAAX,CAAqBC,+CAAhC,CAFD,CADC,CADM,EAOL,oBAAC,GAAD;AACe,QAAA,MAAM,EAAC,sBADtB;AAEe,QAAA,QAAQ,EAAC,wBAFxB,CAGe;AACV;AAJL;AAKK,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWQ,SAAX,CAAqB,iDAArB,CALb;AAMK,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWQ,SAAX,CAAqB,gBAArB,CANX;AAOK,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWQ,SAAX,CAAqB,iBAArB,CAPZ;AAQK,QAAA,UAAU,EAAE,KAAKR,KAAL,CAAWQ,SAAX,CAAqB,oBAArB,CARjB;AASK,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWQ,SAAX,CAAqB,mBAArB,CATd,CAUK;AAVL;AAWe,QAAA,IAAI,EAAC,IAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPK,CAFF,CAFF,CADF;AA6BD;;;;EAhEoBpB,KAAK,CAACsB,S;;AAmE7B,eAAeX,QAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\nimport Geocode from \"react-geocode\";\nimport Map from './Map';\n\n\nclass MapModal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconsole.log(\"Hello from Map Modal\");\n\t\tthis.state = {\n\t\t\tmodal: false\n\t\t};\n\t\t\n\t\tthis.toggle = this.toggle.bind(this);\n\n\n\t}\n\tcomponentDidMount() {\n\t\t// Geocode.setApiKey(\"2230344e87193a\");\n\t\t// Geocode.enableDebug();\n\t\t// Geocode.fromAddress(\"300 PASTEUR DR H3680A\").then(\n\t\t// \tresponse => {\n\t\t// \t\tconsole.log(\"ha lat w lng\")\n\t\t// \t\tthis.setState({\n\t\t// \t\t\tlat: response.results[0].geometry.location.latitude,\n\t\t// \t\t\tlng: response.results[0].geometry.location.longitude\n\t\t// \t})\n\t\t// },\n\t\t// \terror => {\n\t\t// \t\tconsole.error(error);\n\t\t// }\n\t\t// );\n\t}\n\ttoggle() {\n\t\t\tthis.setState({\n\t\t\t\tmodal: !this.state.modal\n\t\t\t});\n    }\n\n  render() {\n    return (\n      <div>\n        <Button color=\"info\" className=\"font-weight-bold btn float-right\" onClick={this.toggle}><i className=\"fa fa-location-arrow\" aria-hidden=\"true\"></i> Address </Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.physician[\"Physician_Profile_ID\"]}>\n          <ModalHeader toggle={this.toggle} >Location </ModalHeader>\n          <ModalBody>\n\t\t  <Row className=\"clearfix\">\n\t\t\t<Col>\n\t\t\t\tAddress:\n\t\t\t\t<address> {this.props.physician.Recipient_Primary_Business_Street_Address_Line1}</address>\n\t\t\t</Col>\n\t\t  </Row>\n\t\t\t  <Map\n                    app_id=\"0etNHVQpVlYq19ZIMA8r\"\n                    app_code=\"GnTQW_LcBFER-c7EX-0b3g\"\n                    // lat={this.state.lat}\n\t\t\t\t\t\t\t\t\t\t// lng={this.state.lng}\n\t\t\t\t\t\t\t\t\t\tstreet={this.props.physician[\"Recipient_Primary_Business_Street_Address_Line1\"]}\n\t\t\t\t\t\t\t\t\t\tcity={this.props.physician[\"Recipient_City\"]}\n\t\t\t\t\t\t\t\t\t\tstate={this.props.physician[\"Recipient_State\"]}\n\t\t\t\t\t\t\t\t\t\tpostalCode={this.props.physician[\"Recipient_Zip_Code\"]}\n\t\t\t\t\t\t\t\t\t\tcountry={this.props.physician[\"Recipient_Country\"]}\n\t\t\t\t\t\t\t\t\t\t//address={this.props.physician[\"Recipient_Primary_Business_Street_Address_Line1\"]}\n                    zoom=\"12\"\n                />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default MapModal;\n"]},"metadata":{},"sourceType":"module"}